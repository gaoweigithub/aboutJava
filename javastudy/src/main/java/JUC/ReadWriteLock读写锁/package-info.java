package JUC.ReadWriteLock读写锁;
/**
 * ReadWriteLock 维护了一对相关的锁，一个用于只读操作，另一个用于写入操作。
 * 只要没有writer，读取锁可以由多个reader 线程同时保持。写入锁是独占的。
 * ReadWriteLock 读取操作通常不会改变共享资源，但执行写入操作时，必须独占方式来获取锁。
 * 对于读取操作占多数的数据结构。ReadWriteLock 能提供比独占锁更高的并发性。
 * 而对于只读的数据结构，其中包含的不变性可以完全不需要考虑加锁操作。
 *
 * 读写锁的机制：
 *    "读-读" 不互斥
 *    "读-写" 互斥
 *    "写-写" 互斥
 *
 * */